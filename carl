#!/usr/bin/env python3
"""carl: An advanced pessimistic phrase generator
Usage:
    carl [options]

Options:
    -h --help                       Show this help
    -v --version                    Show the version
    -V --verbose                    Display verbose debug output [default: false]
    -p --phrase-list=<phrase-list>  Read in a different phrase list file than the default [default: phrases.json]
"""

import sys
import os
import traceback
import time
import re
import readline
import logging
import json
import random

from docopt import docopt

class Phrases:
    """
    Stores a series of phrases as a list of strings parsed from a JSON file
    """
    def __init__(self, filename):
        """
        Initialization
        """
        # Initialize empty list of phrases
        self._phrases = self.Parse(filename)

        # Seed random number generator
        random.seed()

    @property
    def phrases(self):
        """
        Return the full list of phrases
        """
        return self._phrases

    def Parse(self, filename):
        """
        Parse the JSON phrase file and return the list of strings
        """
        with open(filename, encoding='utf-8') as phrase_file:
            # Load JSON data
            data = json.loads(phrase_file.read())

        # Read the 'phrases' key to get the list of phrases
        return data['phrases']

        return phrases

    def Random(self):
        """
        Return a random phrase from the phrase list
        """
        # Generate a random phrase index and return the phrase at that index
        index = random.randint(0, len(self.phrases) - 1)
        return self.phrases[index]

# Main
def main():
    """
    Process arguments and run
    """
    verbose = arguments['--verbose']
    phrase_filename = arguments['--phrase-list']

    # Load the phrase list and display a random phrase
    try:
        phrases = Phrases(phrase_filename)
        print(phrases.Random())

    except Exception as e:
        raise e

if __name__ == '__main__':
    try:
        global arguments
        arguments = docopt(__doc__, version='carl 1.0.0')
        main()
        sys.exit(0)

    except KeyboardInterrupt as e: # Ctrl-C
        raise e
    except SystemExit as e: # sys.exit()
        raise e
    except Exception as e:
        print('Error: Unexpected Exception')
        print(str(e))
        traceback.print_exc()
        os._exit(1)
